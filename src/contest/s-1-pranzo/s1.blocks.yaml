- type: start
  message0: start here
  nextStatement: null
  colour: 20
  tooltip: Execution starts here
  helpUrl: ""
  maxInstances: 1
  js: ""

- type: N
  message0: N
  output: Number
  colour: 20
  tooltip: number of food items in the row
  helpUrl: ""
  js: state.N

- type: next food
  message0: next food
  output: String
  colour: 20
  tooltip: the next food in the row
  helpUrl: ""
  js: |
    state.pos < state.N ? state.queue[state.pos] : exit(false, "the food is finished")

- type: is a vegetable
  message0: "%1 is a vegetable"
  args0:
    - type: input_value
      check: String
  output: Boolean
  colour: 20
  tooltip: whether the given food is a vegetable
  helpUrl: ""
  js: |
    (function(x) {
      food = x.split(" ")[0];
      if (food in state.food_types)
        return state.food_types[food] === "verdura";
      exit(false, "unknown food " + x);
    })(%1)

- type: cook
  message0: cook %1
  args0:
    - type: input_value
      check: String
  previousStatement: null
  nextStatement: null
  colour: 20
  tooltip: cook the given food
  helpUrl: ""
  js: |
    (function(x) {
      if (state.pos >= state.N)
        exit(false, "the food is finished");
      if (state.queue[state.pos] !== x)
        exit(false, "this is not the next food");
      if (state.queue[state.pos].split(" ").length > 1)
        exit(false, "you are trying to cook something that is already cooked");
      state.queue[state.pos] += " cotta";
    })(%1);

- type: eat
  message0: eat %1
  args0:
    - type: input_value
      check: String
  previousStatement: null
  nextStatement: null
  colour: 20
  tooltip: eat the given food
  helpUrl: ""
  js: |
    (function(x) {
      if (state.pos >= state.N)
        exit(false, "the food is finished");
      if (state.queue[state.pos] !== x)
        exit(false, "this is not the next food");
      food = state.queue[state.pos].split(" ");
      if (!(food[0] in state.food_types))
        exit(false, "unknown food " + food[0]);
      if (state.food_types[food[0]] == "verdura" && food.length == 1)
        exit(false, "Tip-Tap doesn't like raw vegetables");
      if (state.food_types[food[0]] == "frutta" && food.length > 1)
        exit(false, "a Tip-Tap doesn't like cooked fruits");
      state.pos += 1;
    })(%1);

- type: terminate
  message0: terminate
  previousStatement: null
  colour: 20
  tooltip: finish eating
  helpUrl: ""
  js: |
    if (state.pos < state.N)
      exit(false, "you didn't finish all the food");
    exit(true, "you finished all the food, congrats!");