- type: start
  message0: inizia qui
  nextStatement: null
  colour: 20
  tooltip: L'esecuzione inizia da qui
  helpUrl: ""
  maxInstances: 1
  js: ""

- type: N
  message0: N
  output: Number
  colour: 20
  tooltip: CAMBIAMI
  helpUrl: ""
  js: state.N

- type: M
  message0: M
  output: Number
  colour: 20
  tooltip: CAMBIAMI
  helpUrl: ""
  js: state.M

- type: istruzione corrente
  message0: l'istruzione attuale è %1
  args0:
    - type: field_dropdown
      options:
        - [avanza, "A"]
        - [salta, "S"]
  output: Boolean
  colour: 20
  tooltip: CAMBIAMI
  helpUrl: ""
  js: state.instr[state.i] == %1

- type: colore casella
  message0: la casella corrente è %1
  args0:
    - type: field_dropdown
      options:
        - [bianca, "W"]
        - [nera, "B"]
  output: Boolean
  colour: 20
  tooltip: CAMBIAMI
  js: state.col[state.pos] == %1

- type: colora
  message0: colora di nero
  colour: 20
  previousStatement: null
  nextStatement: null
  tooltip: CAMBIAMI
  js: state.col[state.pos] = "B";

- type: avanza
  message0: avanza
  colour: 20
  previousStatement: null
  nextStatement: null
  tooltip: CAMBIAMI
  js: |
    state.pos += 1;

- type: prossima istruzione
  message0: prossima istruzione
  colour: 20
  previousStatement: null
  nextStatement: null
  tooltip: CAMBIAMI
  js: |
    state.instr += 1;

- type: torna all'inizio
  message0: torna all'inizio
  colour: 20
  previousStatement: null
  nextStatement: null
  tooltip: CAMBIAMI
  js: |
    state.pos = 0;
    state.i = 0;

- type: termina
  message0: termina
  previousStatement: null
  colour: 20
  tooltip: termina il procedimento
  helpUrl: ""
  js: |
    exit(true, "hai costruito bene le colonne, complimenti!");
